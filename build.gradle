plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'net.neoforged.gradle.userdev' version '7.0.163'
    id 'com.diffplug.spotless' version '6.25.0'
}

version = "${minecraft_version}-${mod_version}"
group = 'platinpython.vfxgenerator'
base.archivesName = 'VFX Generator'

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

jarJar.enable()

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft.accessTransformers.file 'src/main/resources/META-INF/accesstransformers.cfg'

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main

        dependencies {
            runtime 'org.l33tlabs.twl:pngdecoder:1.0'
        }
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', 'vfxgenerator'
    }

    client_alt {
        run('client')

        arguments.addAll '--username', 'DevAlt'
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', 'vfxgenerator'

        argument '--nogui'
    }

    data {
        arguments.addAll '--mod', 'vfxgenerator', '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = 'https://maven.lukebemish.dev/releases/'
    }
}

dependencies {
    implementation 'net.neoforged:neoforge:21.1.47'

    compileOnly 'org.jspecify:jspecify:1.0.0'

    implementation 'org.l33tlabs.twl:pngdecoder:1.0'
    jarJar('org.l33tlabs.twl:pngdecoder:[1.0,)') {
        transitive(false)
    }

    implementation('dev.lukebemish:codecextras:2.3.1') {
        capabilities {
            requireCapability('dev.lukebemish:codecextras-stream')
        }
    }

    runtimeOnly "curse.maven:atlasviewer-633577:5490697"
}

tasks.jarJar.configure {
    archiveClassifier = ''
}

jar {
    archiveClassifier = 'slim'

    manifest {
        attributes([
                "Specification-Title"     : "vfxgenerator",
                "Specification-Vendor"    : "PlatinPython",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "PlatinPython",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// TODO: Figure out why it's still needed
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

apply from: rootProject.file('codeformat/spotless-rules.gradle')
